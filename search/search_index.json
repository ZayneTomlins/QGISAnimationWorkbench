{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Animation Workbench \u00b6 This is a great plugin!","title":"Home"},{"location":"#welcome-to-the-animation-workbench","text":"This is a great plugin!","title":"Welcome to the Animation Workbench"},{"location":"architecture/design/","text":"Design \u00b6","title":"Design"},{"location":"architecture/design/#design","text":"","title":"Design"},{"location":"faq/faq/","text":"Frequently Asked Questions \u00b6","title":"FAQ"},{"location":"faq/faq/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"library/snippets/","text":"Snippets \u00b6 Line of travel \u00b6 In this example we use a geometry generator to create a line between the origin point and the destination point: if (@from_feature_id = $id OR @to_feature_id = $id, -- read this from inside to out so -- last tranform the geometry back to the map crs transform( -- densify the geometry so that when we transform -- back it makes a great circle densify_by_count( -- move the geometry into a crs that -- shows a great circle as a straight line transform( -- make a line from the previous pont to the next point make_line( geometry(@from_feature), geometry(@to_feature) ), @map_crs, 'EPSG:4326'), 99), 'EPSG:4326', @map_crs), None) Showing diagnostic info as a copyright label \u00b6 Showing diagnostic information in the QGIS copyright label: [% 'Feature Variables:' || ' \\n------------------------' || ' \\nPrevious Feature ' || to_string(coalesce(attribute(@previous_feature, 'name'), '-')) || ' \\nPrevious Feature ID ' || to_string(coalesce(@previous_feature_id, '-')) || ' \\n' || ' \\nNext Feature ' || to_string(coalesce(attribute(@next_feature, 'name'), '-')) || ' \\nNext Feature ID ' || to_string(coalesce(@next_feature_id, '-')) || ' \\n' || ' \\nHover Feature ' || to_string(coalesce(attribute(@hover_feature, 'name'), '-')) || ' \\nHover Feature ID ' || to_string(coalesce(@hover_feature_id, '-')) || ' \\n' || ' \\nFrom Feature ' || to_string(coalesce(attribute(@from_feature, 'name'), '-')) || ' \\nFrom Feature ID ' || to_string(coalesce(@from_feature_id, '-')) || ' \\n' || ' \\nTo Feature ' || to_string(coalesce(attribute(@to_feature, 'name'), '-')) || ' \\nTo Feature ID ' || to_string(coalesce(@to_feature_id, '-')) || ' \\n' || ' \\nTotal Hover Frames ' || to_string(coalesce(@hover_frames, 0)) || ' \\nCurrent Hover Frame ' || to_string(coalesce(@current_hover_frame, 0)) || ' \\nTotal Travel Frames ' || to_string(coalesce(@travel_frames, 0)) || ' \\nCurrent Travel Frame ' || to_string(coalesce(@current_travel_frame, 0)) || ' \\nTotal Frame Count ' || to_string(coalesce(@total_frame_count, 0)) || ' \\nFrame Number ' || to_string(coalesce(@frame_number, 0)) || ' \\nFrame Rate ' || to_string(coalesce(@frame_rate, 0)) || ' \\nwith Current Animation Action: ' || @current_animation_action || ' \\nTo Direction ' || coalesce(format_number(degrees(azimuth( geometry(@hover_feature), geometry(@previous_feature) ) ) ), 0) || ' \\nFrom Direction ' || coalesce(format_number(degrees( azimuth( geometry(@hover_feature), geometry(@next_feature) ) ) ), 0) %] Example output: Variable size of labels \u00b6 Variably changing the size on a label as we approach it in the animation: ```40 * ((@frame_number % @hover_frames) / @hover_frames) ## Calculating the angle between points You can calculate the angle between the hover point and the previous point like this: ```python coalesce( format_number( degrees( azimuth( geometry(@hover_feature), geometry(@previous_feature) ) ) ), 0) You can set the angle of rotation for a symbol using this expression: Using this technique you can also create an animation effect showing the source direction of travel and the new destination. scale_linear ( @current_hover_frame, 0, @hover_frames, degrees( azimuth( geometry(@hover_feature), geometry(@previous_feature) ) ), degrees( azimuth( geometry(@hover_feature), geometry(@next_feature) ) ) ) Will produce something like this:","title":"Expression Examples"},{"location":"library/snippets/#snippets","text":"","title":"Snippets"},{"location":"library/snippets/#line-of-travel","text":"In this example we use a geometry generator to create a line between the origin point and the destination point: if (@from_feature_id = $id OR @to_feature_id = $id, -- read this from inside to out so -- last tranform the geometry back to the map crs transform( -- densify the geometry so that when we transform -- back it makes a great circle densify_by_count( -- move the geometry into a crs that -- shows a great circle as a straight line transform( -- make a line from the previous pont to the next point make_line( geometry(@from_feature), geometry(@to_feature) ), @map_crs, 'EPSG:4326'), 99), 'EPSG:4326', @map_crs), None)","title":"Line of travel"},{"location":"library/snippets/#showing-diagnostic-info-as-a-copyright-label","text":"Showing diagnostic information in the QGIS copyright label: [% 'Feature Variables:' || ' \\n------------------------' || ' \\nPrevious Feature ' || to_string(coalesce(attribute(@previous_feature, 'name'), '-')) || ' \\nPrevious Feature ID ' || to_string(coalesce(@previous_feature_id, '-')) || ' \\n' || ' \\nNext Feature ' || to_string(coalesce(attribute(@next_feature, 'name'), '-')) || ' \\nNext Feature ID ' || to_string(coalesce(@next_feature_id, '-')) || ' \\n' || ' \\nHover Feature ' || to_string(coalesce(attribute(@hover_feature, 'name'), '-')) || ' \\nHover Feature ID ' || to_string(coalesce(@hover_feature_id, '-')) || ' \\n' || ' \\nFrom Feature ' || to_string(coalesce(attribute(@from_feature, 'name'), '-')) || ' \\nFrom Feature ID ' || to_string(coalesce(@from_feature_id, '-')) || ' \\n' || ' \\nTo Feature ' || to_string(coalesce(attribute(@to_feature, 'name'), '-')) || ' \\nTo Feature ID ' || to_string(coalesce(@to_feature_id, '-')) || ' \\n' || ' \\nTotal Hover Frames ' || to_string(coalesce(@hover_frames, 0)) || ' \\nCurrent Hover Frame ' || to_string(coalesce(@current_hover_frame, 0)) || ' \\nTotal Travel Frames ' || to_string(coalesce(@travel_frames, 0)) || ' \\nCurrent Travel Frame ' || to_string(coalesce(@current_travel_frame, 0)) || ' \\nTotal Frame Count ' || to_string(coalesce(@total_frame_count, 0)) || ' \\nFrame Number ' || to_string(coalesce(@frame_number, 0)) || ' \\nFrame Rate ' || to_string(coalesce(@frame_rate, 0)) || ' \\nwith Current Animation Action: ' || @current_animation_action || ' \\nTo Direction ' || coalesce(format_number(degrees(azimuth( geometry(@hover_feature), geometry(@previous_feature) ) ) ), 0) || ' \\nFrom Direction ' || coalesce(format_number(degrees( azimuth( geometry(@hover_feature), geometry(@next_feature) ) ) ), 0) %] Example output:","title":"Showing diagnostic info as a copyright label"},{"location":"library/snippets/#variable-size-of-labels","text":"Variably changing the size on a label as we approach it in the animation: ```40 * ((@frame_number % @hover_frames) / @hover_frames) ## Calculating the angle between points You can calculate the angle between the hover point and the previous point like this: ```python coalesce( format_number( degrees( azimuth( geometry(@hover_feature), geometry(@previous_feature) ) ) ), 0) You can set the angle of rotation for a symbol using this expression: Using this technique you can also create an animation effect showing the source direction of travel and the new destination. scale_linear ( @current_hover_frame, 0, @hover_frames, degrees( azimuth( geometry(@hover_feature), geometry(@previous_feature) ) ), degrees( azimuth( geometry(@hover_feature), geometry(@next_feature) ) ) ) Will produce something like this:","title":"Variable size of labels"},{"location":"start/configure/","text":"Initial Configuration \u00b6","title":"Initial Configuration"},{"location":"start/configure/#initial-configuration","text":"","title":"Initial Configuration"},{"location":"start/install/","text":"Installing the QGIS Animation Workshop plugin \u00b6","title":"Installation"},{"location":"start/install/#installing-the-qgis-animation-workshop-plugin","text":"","title":"Installing the QGIS Animation Workshop plugin"},{"location":"tutorials/","text":"Tutorials \u00b6","title":"QGIS"},{"location":"tutorials/#tutorials","text":"","title":"Tutorials"}]}